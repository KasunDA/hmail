
<div class="off-canvas-wrap" data-offcanvas>
  <div class="inner-wrap">
    <nav class="tab-bar">
      <section class="left-small">
        <a class="left-off-canvas-toggle menu-icon" href="#"><span></span></a>
      </section>

      <section class="middle tab-bar-section">
        <h1 id="off-canvas-menu-title" class="title">Logged in as <%= current_user.email %></h1>
      </section>

    </nav>

    <div class="left-off-canvas-menu">
      <ul class="off-canvas-list" data-tab>
        <li><label class="first">Mailboxes</label></li>
        <li class="tab-title active"><a id="inbox-title" href="#panel1">Inbox</a></li>
        <li class="tab-title"><a id="sent-title" href="#panel2">Sent</a></li>
        <li class="tab-title"><a id="archived-title" href="#panel3">Archived</a></li>
        <li class="tab-title"><a id="unknown-title" href="#panel4">Blacklisted</a></li>
      </ul>
    </div>

    <section class="main-section">
      <br>

      <div class="tabs-content row">
        <%= link_to 'Compose a message', new_email_path, {:class => 'medium round button'} %>

        <div class="content active" id="panel1">
          <div id="inbox">
          </div>
        </div>
        <div class="content" id="panel2">
          <div id="sent">
          </div>
        </div>
        <div class="content" id="panel3">
          <div id="archived">
          </div>
        </div>
        <div class="content" id="panel4">
          <div id="unknown">
          </div>
        </div>
      </div>
    </section>

    <a class="exit-off-canvas"></a>

  </div>
</div>




<script type="text/template" id="inbox-template">
  <%% if (emails.length > 0) { %>
  <table>
    <thead>
    <tr>
      <th>Date</th>
      <th>From</th>
      <th>Subject</th>
    </tr>
    </thead>

    <tbody>
    <%% _.each(emails, function(email) { %>
    <%% var id = email.get('id');
    if (id > that.last_inbox_id) {
    that.last_inbox_id = id;
    } %>
    <tr>
      <td><%%= email.get('friendly_date') %></td>
      <td><%%= email.get('from') %></td>
      <td><a href="/emails/<%%=email.get('id')%>"><%%= email.get('subject') %></a></td>
    </tr>
    <%% }); %>
    </tbody>
  </table>
  <%% } %>
</script>

<script type="text/template" id="sent-template">
  <%% if (emails.length > 0) { %>
  <table>
    <thead>
    <tr>
      <th>Date</th>
      <th>To</th>
      <th>Subject</th>
    </tr>
    </thead>

    <tbody>
    <%% _.each(emails, function(email) { %>
    <%% var id = email.get('id');
    if (id > that.last_sent_id) {
    that.last_sent_id = id;
    } %>
    <tr>
      <td><%%= email.get('friendly_date') %></td>
      <td><%%= email.get('to') %></td>
      <td><a href="/emails/<%%=email.get('id')%>"><%%= email.get('subject') %></a></td>
    </tr>
    <%% }); %>
    </tbody>
  </table>
  <%% } %>
</script>

<script type="text/template" id="archived-template">
  <%% if (emails.length > 0) { %>
  <table>
    <thead>
    <tr>
      <th>Date</th>
      <th>From</th>
      <th>Subject</th>
    </tr>
    </thead>

    <tbody>
    <%% _.each(emails, function(email) { %>
    <%% var id = email.get('id');
    if (id > that.last_archived_id) {
    that.last_archived_id = id;
    } %>
    <tr>
      <td><%%= email.get('friendly_date') %></td>
      <td><%%= email.get('from') %></td>
      <td><a href="/emails/<%%=email.get('id')%>"><%%= email.get('subject') %></a></td>
    </tr>
    <%% }); %>
    </tbody>
  </table>
  <%% } %>
</script>

<script type="text/template" id="unknown-template">
  <%% if (emails.length > 0) { %>
  <table>
    <div data-alert class="alert-box alert">
      Blacklisted emails will be deleted after one week
    </div>
    <thead>
    <tr>
      <th>Date</th>
      <th>From</th>
    </tr>
    </thead>

    <tbody>
    <%% _.each(emails, function(email) { %>
    <%% var id = email.get('id');
    if (id > that.last_unknown_id) {
    that.last_unknown_id = id;
    } %>
    <tr>
      <td><%%= email.get('friendly_date') %></td>
      <td><%%= email.get('from') %></td>
    </tr>
    <%% }); %>
    </tbody>
  </table>
  <%% } %>
</script>

<script>

    var timer1, timer2;

    (function () {

        var EmailCollection = Backbone.Collection.extend({
            url: '/emails'
        });

        var inboxEmails = new EmailCollection();
        var sentEmails = new EmailCollection();
        var archivedEmails = new EmailCollection();
        var unknownEmails = new EmailCollection();

        var onFailure = function () {
        };
        var onSuccess = function () {
        };

        var updateEmailCount = function (selectorText, mailboxType, emailCount) {
            var elem;
            elem = $(selectorText); //.find("a").first();
            var regex = new RegExp(mailboxType + "( \\(\\d+\\))?");
            var newTitle = elem.html().replace(regex, mailboxType + " (" + emailCount + ")");
            elem.html(newTitle);
        };

        var InboxView = Backbone.View.extend({
            el: '#inbox',
            render: function () {
                var that = this;
                inboxEmails.fetch({
                    data: {
                        mailbox_type: 'inbox'
                    },
                    success: function (emails) {
                        onSuccess();
                        var template = _.template($('#inbox-template').html(), {
                            that: that,
                            emails: emails.models
                        });
                        updateEmailCount("#inbox-title", "Inbox", emails.models.length);
                        that.$el.html(template);
                        $(document).foundation('tab', 'reflow');
                    }
                })
            }
        });

        var SentView = Backbone.View.extend({
            el: '#sent',
            render: function () {
                var that = this;
                sentEmails.fetch({
                    data: {
                        mailbox_type: 'sent'
                    },
                    success: function (emails) {
                        onSuccess();
                        var template = _.template($('#sent-template').html(), {
                            that: that,
                            emails: emails.models
                        });
                        updateEmailCount("#sent-title", "Sent", emails.models.length);
                        that.$el.html(template);
                        $(document).foundation('tab', 'reflow');
                    }
                })
            }
        });

        var ArchivedView = Backbone.View.extend({
            el: '#archived',
            render: function () {
                var that = this;
                archivedEmails.fetch({
                    data: {
                        mailbox_type: 'archived'
                    },
                    success: function (emails) {
                        onSuccess();
                        var template = _.template($('#archived-template').html(), {
                            that: that,
                            emails: emails.models
                        });
                        updateEmailCount("#archived-title", "Archived", emails.models.length);
                        that.$el.html(template);
                        $(document).foundation('tab', 'reflow');
                    }
                })
            }
        });

        var UnknownView = Backbone.View.extend({
            el: '#unknown',
            render: function () {
                var that = this;
                unknownEmails.fetch({
                    data: {
                        mailbox_type: 'unknown'
                    },
                    success: function (emails) {
                        onSuccess();
                        var template = _.template($('#unknown-template').html(), {
                            that: that,
                            emails: emails.models
                        });
                        updateEmailCount("#unknown-title", "Blacklisted", emails.models.length);
                        that.$el.html(template);
                        $(document).foundation('tab', 'reflow');
                    }
                })
            }
        });

        var inboxView = new InboxView();
        var sentView = new SentView();
        var archivedView = new ArchivedView();
        var unknownView = new UnknownView();

        $.get("/emails/refresh");
        inboxView.render();
        sentView.render();
        archivedView.render();
        unknownView.render();
        timer1 = setInterval(function () {
            $.get("/emails/refresh").fail(onFailure()).success(onSuccess());
        }, 60000);
        timer2 = setInterval(function () {
            inboxView.render();
            sentView.render();
            archivedView.render();
            unknownView.render();
        }, 15000);

        $(document).foundation();
    }());

</script>